import{_ as t,o as a,c as e,R as o}from"./chunks/framework.knLoFo0c.js";const h=JSON.parse('{"title":"Introduction to Java","description":"","frontmatter":{},"headers":[],"relativePath":"java/introduction.md","filePath":"java/introduction.md"}'),n={name:"java/introduction.md"},r=o('<h1 id="introduction-to-java" tabindex="-1">Introduction to Java <a class="header-anchor" href="#introduction-to-java" aria-label="Permalink to &quot;Introduction to Java&quot;">​</a></h1><h2 id="what-is-java" tabindex="-1">What is Java? <a class="header-anchor" href="#what-is-java" aria-label="Permalink to &quot;What is Java?&quot;">​</a></h2><p>Java is a <strong>high-level</strong>, <strong>object-oriented</strong>, <strong>platform-independent</strong> programming language. It was developed by <strong>James Gosling</strong> at <strong>Sun Microsystems</strong> in 1995. Java is a fast, secure, and reliable language used for many games, devices, and applications.</p><p>More than <strong>3 billion devices</strong> run Java today. It is used for developing <strong>mobile applications</strong>, <strong>desktop applications</strong>, <strong>web applications</strong>, <strong>games</strong>, <strong>database connection</strong>, and much more.</p><h2 id="java-features" tabindex="-1">Java Features <a class="header-anchor" href="#java-features" aria-label="Permalink to &quot;Java Features&quot;">​</a></h2><p>The primary objective of Java programming language creation was to make it portable and platform-independent. Java has the following features:</p><ul><li><p><strong>Simple</strong>: Java is easy to learn. It is designed to be easy to use and learn. Java has removed many complicated features such as pointers, operator overloading, multiple inheritances, etc.</p></li><li><p><strong>Object-Oriented</strong>: Java is an object-oriented programming language. It follows the OOPs concepts such as <strong>inheritance</strong>, <strong>encapsulation</strong>, <strong>polymorphism</strong>, <strong>abstraction</strong>, etc.</p></li><li><p><strong>Platform-Independent</strong>: Java is platform-independent. It is not specific to any processor or operating system. It can run on any machine with any operating system.</p></li><li><p><strong>Secure</strong>: Java is a secure programming language. It enables the development of virus-free, tamper-free systems. It does not support pointers, which avoids security problems.</p></li><li><p><strong>Robust</strong>: Java is a robust programming language. It is designed to eliminate the possibility of error-prone situations by emphasizing mainly on compile-time error checking and runtime checking.</p></li><li><p><strong>Multithreaded</strong>: Java supports multithreading. It allows you to write programs that can perform many tasks simultaneously. It helps in the execution of two or more parts of a program at the same time.</p></li><li><p><strong>Portable</strong>: Java is portable. It can be carried to any platform or operating system. Java provides the concept of <strong>bytecode</strong> due to which it is portable.</p></li><li><p><strong>High Performance</strong>: Java is faster than other traditional interpreted programming languages because Java bytecode is &quot;close&quot; to native code. It is still a little bit slower than a compiled language (such as C++). However, Java enables high performance with the use of just-in-time compilers.</p></li><li><p><strong>Distributed</strong>: Java is distributed. It is designed to support the construction of applications on networks. It helps to share data and programs.</p></li><li><p><strong>Dynamic</strong>: Java is a dynamic programming language. It supports dynamic memory allocation. Java programs can carry an extensive amount of run-time information that can be used to verify and resolve accesses to objects on run-time.</p></li></ul>',7),s=[r];function i(l,p,g,c,d,m){return a(),e("div",null,s)}const v=t(n,[["render",i]]);export{h as __pageData,v as default};
