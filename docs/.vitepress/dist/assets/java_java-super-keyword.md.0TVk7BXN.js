import{_ as e,o as a,c as s,R as o}from"./chunks/framework.knLoFo0c.js";const v=JSON.parse('{"title":"Java super Keyword","description":"","frontmatter":{},"headers":[],"relativePath":"java/java-super-keyword.md","filePath":"java/java-super-keyword.md"}'),t={name:"java/java-super-keyword.md"},r=o(`<h1 id="java-super-keyword" tabindex="-1">Java super Keyword <a class="header-anchor" href="#java-super-keyword" aria-label="Permalink to &quot;Java super Keyword&quot;">​</a></h1><p>The super keyword in Java is a reference variable that is used to refer parent class objects. The keyword &quot;super&quot; came into the picture with the concept of Inheritance. It is majorly used in the following contexts:</p><ul><li><p>Use of super with variables: This scenario occurs when a derived class and base class have same data members. In this case there is a possibility of ambiguity for the JVM. To avoid this ambiguity we use super keyword to refer the immediate parent class instance variable.</p></li><li><p>Use of super with methods: When we want to call a method of immediate parent class and that method is overridden by child class, we use super keyword to differentiate between the overridden method and parent class method.</p></li><li><p>Use of super with constructors: When we want to call the constructor of immediate parent class, we use super keyword.</p></li></ul><h2 id="use-of-super-with-variables" tabindex="-1">Use of super with variables <a class="header-anchor" href="#use-of-super-with-variables" aria-label="Permalink to &quot;Use of super with variables&quot;">​</a></h2><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Animal</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    String color </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;white&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Animal</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    String color </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;white&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,5),n=[r];function l(p,i,c,d,h,u){return a(),s("div",null,n)}const w=e(t,[["render",l]]);export{v as __pageData,w as default};
