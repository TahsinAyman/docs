import{_ as s,o as a,c as n,R as l}from"./chunks/framework.knLoFo0c.js";const h=JSON.parse('{"title":"Java Data Types","description":"","frontmatter":{},"headers":[],"relativePath":"java/java-data-types.md","filePath":"java/java-data-types.md"}'),o={name:"java/java-data-types.md"},e=l(`<h1 id="java-data-types" tabindex="-1">Java Data Types <a class="header-anchor" href="#java-data-types" aria-label="Permalink to &quot;Java Data Types&quot;">​</a></h1><h2 id="java-data-types-1" tabindex="-1">Java Data Types <a class="header-anchor" href="#java-data-types-1" aria-label="Permalink to &quot;Java Data Types&quot;">​</a></h2><p>Variables can store data of different types, and different types can do different things.</p><p>Java has the following data types built-in by default, organized by category:</p><ul><li><strong>Primitive Types</strong><ul><li><strong>Numeric</strong><ul><li><strong>Integer</strong><ul><li>byte</li><li>short</li><li>int</li><li>long</li></ul></li><li><strong>Floating Point</strong><ul><li>float</li><li>double</li></ul></li></ul></li><li><strong>Non-Numeric</strong><ul><li>char</li><li>boolean</li></ul></li></ul></li><li><strong>Reference Types</strong><ul><li>String</li><li>Array</li><li>Class</li></ul></li></ul><h2 id="primitive-types" tabindex="-1">Primitive Types <a class="header-anchor" href="#primitive-types" aria-label="Permalink to &quot;Primitive Types&quot;">​</a></h2><h3 id="numeric" tabindex="-1">Numeric <a class="header-anchor" href="#numeric" aria-label="Permalink to &quot;Numeric&quot;">​</a></h3><h4 id="integer" tabindex="-1">Integer <a class="header-anchor" href="#integer" aria-label="Permalink to &quot;Integer&quot;">​</a></h4><h5 id="byte" tabindex="-1">byte <a class="header-anchor" href="#byte" aria-label="Permalink to &quot;byte&quot;">​</a></h5><p>Stores whole numbers from -128 to 127.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;"> myByte </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(myByte); </span><span style="color:#6A737D;">// Outputs 100</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">byte</span><span style="color:#24292E;"> myByte </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(myByte); </span><span style="color:#6A737D;">// Outputs 100</span></span></code></pre></div><h5 id="short" tabindex="-1">short <a class="header-anchor" href="#short" aria-label="Permalink to &quot;short&quot;">​</a></h5><p>Stores whole numbers from -32,768 to 32,767.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">short</span><span style="color:#E1E4E8;"> myShort </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5000</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(myShort); </span><span style="color:#6A737D;">// Outputs 5000</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">short</span><span style="color:#24292E;"> myShort </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5000</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(myShort); </span><span style="color:#6A737D;">// Outputs 5000</span></span></code></pre></div><h5 id="int" tabindex="-1">int <a class="header-anchor" href="#int" aria-label="Permalink to &quot;int&quot;">​</a></h5><p>Stores whole numbers from -2,147,483,648 to 2,147,483,647.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> myInt </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100000</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(myInt); </span><span style="color:#6A737D;">// Outputs 100000</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> myInt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100000</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(myInt); </span><span style="color:#6A737D;">// Outputs 100000</span></span></code></pre></div><h5 id="long" tabindex="-1">long <a class="header-anchor" href="#long" aria-label="Permalink to &quot;long&quot;">​</a></h5><p>Stores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> myLong </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">15000000000L</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(myLong); </span><span style="color:#6A737D;">// Outputs 15000000000</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">long</span><span style="color:#24292E;"> myLong </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">15000000000L</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(myLong); </span><span style="color:#6A737D;">// Outputs 15000000000</span></span></code></pre></div><h4 id="floating-point" tabindex="-1">Floating Point <a class="header-anchor" href="#floating-point" aria-label="Permalink to &quot;Floating Point&quot;">​</a></h4><h5 id="float" tabindex="-1">float <a class="header-anchor" href="#float" aria-label="Permalink to &quot;float&quot;">​</a></h5><p>Stores floating point numbers, with decimals, such as 19.99 or -19.99.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> myFloatNum </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5.99f</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(myFloatNum); </span><span style="color:#6A737D;">// Outputs 5.99</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">float</span><span style="color:#24292E;"> myFloatNum </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5.99f</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(myFloatNum); </span><span style="color:#6A737D;">// Outputs 5.99</span></span></code></pre></div><h5 id="double" tabindex="-1">double <a class="header-anchor" href="#double" aria-label="Permalink to &quot;double&quot;">​</a></h5><p>Stores floating point numbers, with decimals, such as 19.99 or -19.99.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">double</span><span style="color:#E1E4E8;"> myDoubleNum </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">19.99d</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(myDoubleNum); </span><span style="color:#6A737D;">// Outputs 19.99</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">double</span><span style="color:#24292E;"> myDoubleNum </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">19.99d</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(myDoubleNum); </span><span style="color:#6A737D;">// Outputs 19.99</span></span></code></pre></div><h3 id="non-numeric" tabindex="-1">Non-Numeric <a class="header-anchor" href="#non-numeric" aria-label="Permalink to &quot;Non-Numeric&quot;">​</a></h3><h4 id="char" tabindex="-1">char <a class="header-anchor" href="#char" aria-label="Permalink to &quot;char&quot;">​</a></h4><p>Stores single characters, such as &#39;a&#39; or &#39;B&#39;. Char values are surrounded by single quotes.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> myLetter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;D&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(myLetter); </span><span style="color:#6A737D;">// Outputs D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">char</span><span style="color:#24292E;"> myLetter </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;D&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(myLetter); </span><span style="color:#6A737D;">// Outputs D</span></span></code></pre></div><h4 id="boolean" tabindex="-1">boolean <a class="header-anchor" href="#boolean" aria-label="Permalink to &quot;boolean&quot;">​</a></h4><p>Stores values with two states: true or false.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span>
<span class="line"><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> myBool </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(myBool); </span><span style="color:#6A737D;">// Outputs true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span>
<span class="line"><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> myBool </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(myBool); </span><span style="color:#6A737D;">// Outputs true</span></span></code></pre></div><h2 id="reference-types" tabindex="-1">Reference Types <a class="header-anchor" href="#reference-types" aria-label="Permalink to &quot;Reference Types&quot;">​</a></h2><h3 id="string" tabindex="-1">String <a class="header-anchor" href="#string" aria-label="Permalink to &quot;String&quot;">​</a></h3><p>Stores a sequence of characters, such as &quot;Hello&quot;.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">String myText </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Hello&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(myText); </span><span style="color:#6A737D;">// Outputs Hello</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">String myText </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Hello&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(myText); </span><span style="color:#6A737D;">// Outputs Hello</span></span></code></pre></div><h3 id="array" tabindex="-1">Array <a class="header-anchor" href="#array" aria-label="Permalink to &quot;Array&quot;">​</a></h3><p>Stores a fixed-size sequential collection of elements of the same type.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] cars </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;Volvo&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;BMW&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Ford&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Mazda&quot;</span><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(cars[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]); </span><span style="color:#6A737D;">// Outputs Volvo</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] cars </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;Volvo&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;BMW&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Ford&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Mazda&quot;</span><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(cars[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]); </span><span style="color:#6A737D;">// Outputs Volvo</span></span></code></pre></div><h3 id="class" tabindex="-1">Class <a class="header-anchor" href="#class" aria-label="Permalink to &quot;Class&quot;">​</a></h3><p>A user-defined blueprint or prototype from which objects are created. It represents the set of properties or methods that are common to all objects of one type.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MyClass</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyClass</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="primitive-types-vs-reference-types" tabindex="-1">Primitive Types vs. Reference Types <a class="header-anchor" href="#primitive-types-vs-reference-types" aria-label="Permalink to &quot;Primitive Types vs. Reference Types&quot;">​</a></h2><p>Primitive types are predefined (already defined) in Java. Reference types are created by the programmer and can be anything from a single class to a massive data structure.</p><p>Primitive types are passed by value. Reference types are passed by reference.</p><p>Primitive types are stored on the stack. Reference types are stored on the heap.</p><p>Primitive types are destroyed immediately after the scope is lost. Reference types are destroyed by the garbage collector when they are no longer needed.</p><h2 id="primitive-types-vs-wrapper-classes" tabindex="-1">Primitive Types vs. Wrapper Classes <a class="header-anchor" href="#primitive-types-vs-wrapper-classes" aria-label="Permalink to &quot;Primitive Types vs. Wrapper Classes&quot;">​</a></h2><p>Primitive types are not classes and they do not have methods.</p><p>To use methods on primitive types, you must first convert them to wrapper classes.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> myInt </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">Integer myIntWrapper </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Integer.</span><span style="color:#B392F0;">valueOf</span><span style="color:#E1E4E8;">(myInt);</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(myIntWrapper.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">()); </span><span style="color:#6A737D;">// Outputs 10</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> myInt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">Integer myIntWrapper </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Integer.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(myInt);</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(myIntWrapper.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">()); </span><span style="color:#6A737D;">// Outputs 10</span></span></code></pre></div><h2 id="type-casting" tabindex="-1">Type Casting <a class="header-anchor" href="#type-casting" aria-label="Permalink to &quot;Type Casting&quot;">​</a></h2><p>Type casting is when you assign a value of one primitive data type to another type.</p><p>In Java, there are two types of casting:</p><ul><li>Widening Casting (automatically) - converting a smaller type to a larger type size</li><li>byte -&gt; short -&gt; char -&gt; int -&gt; long -&gt; float -&gt; double</li><li>Narrowing Casting (manually) - converting a larger type to a smaller size type</li><li>double -&gt; float -&gt; long -&gt; int -&gt; char -&gt; short -&gt; byte</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> myInt </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">double</span><span style="color:#E1E4E8;"> myDouble </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> myInt; </span><span style="color:#6A737D;">// Automatic casting: int to double</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(myInt); </span><span style="color:#6A737D;">// Outputs 9</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(myDouble); </span><span style="color:#6A737D;">// Outputs 9.0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> myInt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">double</span><span style="color:#24292E;"> myDouble </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> myInt; </span><span style="color:#6A737D;">// Automatic casting: int to double</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(myInt); </span><span style="color:#6A737D;">// Outputs 9</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(myDouble); </span><span style="color:#6A737D;">// Outputs 9.0</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">double</span><span style="color:#E1E4E8;"> myDouble </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">9.78</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> myInt </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">) myDouble; </span><span style="color:#6A737D;">// Manual casting: double to int</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(myDouble); </span><span style="color:#6A737D;">// Outputs 9.78</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(myInt); </span><span style="color:#6A737D;">// Outputs 9</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">double</span><span style="color:#24292E;"> myDouble </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">9.78</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> myInt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">) myDouble; </span><span style="color:#6A737D;">// Manual casting: double to int</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(myDouble); </span><span style="color:#6A737D;">// Outputs 9.78</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(myInt); </span><span style="color:#6A737D;">// Outputs 9</span></span></code></pre></div>`,59),p=[e];function t(r,c,i,y,E,u){return a(),n("div",null,p)}const m=s(o,[["render",t]]);export{h as __pageData,m as default};
